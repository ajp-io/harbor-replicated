apiVersion: kots.io/v1beta2
kind: HelmChart
metadata:
  name: harbor-enterprise
spec:
  # chart identifies a matching chart from a .tgz
  chart:
    name: harbor
    chartVersion: 1.18.0
  weight: 0
  helmUpgradeFlags:
    - --wait
    - --timeout
    - 5m
  values:
    imagePullSecrets:
      - name: '{{repl ImagePullSecretName }}'
    harborAdminPassword: repl{{ ConfigOption "harbor_admin_password" }}
    trivy:
      enabled: repl{{ ConfigOptionEquals "trivy_enabled" "1" }}
  optionalValues:
    # Embedded Cluster - Use Ingress with HTTPS
    - when: 'repl{{ eq Distribution "embedded-cluster" }}'
      values:
        expose:
          type: ingress
          tls:
            enabled: true
            certSource: secret
            secret:
              secretName: harbor-tls-cert
          ingress:
            hosts:
              core: repl{{ ConfigOption "harbor_hostname" }}
            className: nginx
            annotations:
              cert-manager.io/cluster-issuer: repl{{ ConfigOptionEquals "letsencrypt_environment" "production" | ternary "letsencrypt-prod" "letsencrypt-staging" }}
        externalURL: https://repl{{ ConfigOption "harbor_hostname" }}
    # KOTS - Use ClusterIP
    - when: 'repl{{ ne Distribution "embedded-cluster" }}'
      values:
        expose:
          type: clusterIP
          tls:
            enabled: false
    # External PostgreSQL mode
    - when: 'repl{{ ConfigOptionEquals "database_type" "external" }}'
      values:
        database:
          type: external
          external:
            host: repl{{ ConfigOption "external_postgres_host" }}
            port: repl{{ ConfigOption "external_postgres_port" }}
            username: repl{{ ConfigOption "external_postgres_username" }}
            password: repl{{ ConfigOption "external_postgres_password" }}
            coreDatabase: repl{{ ConfigOption "external_postgres_database" }}
            sslmode: repl{{ ConfigOption "external_postgres_sslmode" }}
    # Embedded PostgreSQL mode
    - when: 'repl{{ ConfigOptionEquals "database_type" "embedded" }}'
      values:
        database:
          type: internal
          internal:
            password: repl{{ ConfigOption "embedded_postgres_password" }}
    # Air gap - Use local registry
    - when: 'repl{{ HasLocalRegistry }}'
      recursiveMerge: true
      values:
        core:
          image:
            registry: '{{repl LocalRegistryHost }}'
            repository: '{{repl LocalRegistryNamespace }}/harbor-core'
        jobservice:
          image:
            registry: '{{repl LocalRegistryHost }}'
            repository: '{{repl LocalRegistryNamespace }}/harbor-jobservice'
        registry:
          registry:
            image:
              registry: '{{repl LocalRegistryHost }}'
              repository: '{{repl LocalRegistryNamespace }}/registry-photon'
          controller:
            image:
              registry: '{{repl LocalRegistryHost }}'
              repository: '{{repl LocalRegistryNamespace }}/harbor-registryctl'
        portal:
          image:
            registry: '{{repl LocalRegistryHost }}'
            repository: '{{repl LocalRegistryNamespace }}/harbor-portal'
        database:
          internal:
            image:
              registry: '{{repl LocalRegistryHost }}'
              repository: '{{repl LocalRegistryNamespace }}/harbor-db'
        redis:
          internal:
            image:
              registry: '{{repl LocalRegistryHost }}'
              repository: '{{repl LocalRegistryNamespace }}/redis-photon'
        trivy:
          image:
            registry: '{{repl LocalRegistryHost }}'
            repository: '{{repl LocalRegistryNamespace }}/trivy-adapter-photon'
  builder:
    global:
      replicated:
        dockerconfigjson: placeholder # don't fail air gap builds
